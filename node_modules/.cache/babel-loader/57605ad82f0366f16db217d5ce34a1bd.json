{"ast":null,"code":"var _jsxFileName = \"/Users/arunavgupta/Documents/RPL/Base11-GUI/src/components/ConnectionStatus.js\";\nimport React from 'react';\nconst heartbeat = 1000;\n\nvar data = require('./data.json');\n\nexport default class ConnectionStatus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.format = {\n      float: \"right\",\n      marginTop: \"10px\",\n      marginRight: \"10px\"\n    };\n    this.state = {\n      connectionStatus: data.connectionStatus\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), heartbeat);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    if (this.state.connectionStatus === \"1\") {\n      return React.createElement(\"div\", {\n        style: this.format,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Command Board: \", React.createElement(\"span\", {\n        style: {\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.state.connectionStatus));\n    } else {\n      return React.createElement(\"div\", {\n        style: this.format,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Command Board: \", React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.connectionStatus));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/arunavgupta/Documents/RPL/Base11-GUI/src/components/ConnectionStatus.js"],"names":["React","heartbeat","data","require","ConnectionStatus","Component","constructor","props","format","float","marginTop","marginRight","state","connectionStatus","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","date","Date","render","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG,IAAlB;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AAEA,eAAe,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAC7DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AADkB,SAKnBC,MALmB,GAKV;AACRC,MAAAA,KAAK,EAAE,OADC;AAERC,MAAAA,SAAS,EAAE,MAFH;AAGRC,MAAAA,WAAW,EAAE;AAHL,KALU;AAElB,SAAKC,KAAL,GAAa;AAACC,MAAAA,gBAAgB,EAAEX,IAAI,CAACW;AAAxB,KAAb;AACA;;AAQDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,OAAL,GAAeC,WAAW,CACzB,MAAM,KAAKC,IAAL,EADmB,EAEzBhB,SAFyB,CAA1B;AAIA;;AAEDiB,EAAAA,oBAAoB,GAAG;AACtBC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACA;;AAEDE,EAAAA,IAAI,GAAG;AACN,SAAKG,QAAL,CAAc;AACbC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AADO,KAAd;AAGA;;AAEDC,EAAAA,MAAM,GAAI;AACT,QAAI,KAAKX,KAAL,CAAWC,gBAAX,KAAgC,GAApC,EAAyC;AACxC,aACC;AAAK,QAAA,KAAK,EAAE,KAAKL,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACgB;AAAM,QAAA,KAAK,EAAE;AAACgB,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,KAAKZ,KAAL,CAAWC,gBAA3C,CADhB,CADD;AAKA,KAND,MAMO;AACN,aACC;AAAK,QAAA,KAAK,EAAE,KAAKL,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACgB;AAAM,QAAA,KAAK,EAAE;AAACgB,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKZ,KAAL,CAAWC,gBAAzC,CADhB,CADD;AAKA;AACD;;AA3C4D","sourcesContent":["import React from 'react';\n\nconst heartbeat = 1000;\nvar data = require('./data.json');\n\nexport default class ConnectionStatus extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {connectionStatus: data.connectionStatus}\n\t}\n\n\tformat = {\n\t\tfloat: \"right\",\n\t\tmarginTop: \"10px\",\n\t\tmarginRight: \"10px\"\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(\n\t\t\t() => this.tick(),\n\t\t\theartbeat\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\n\ttick() {\n\t\tthis.setState({\n\t\t\tdate: new Date()\n\t\t});\n\t}\n\n\trender () {\n\t\tif (this.state.connectionStatus === \"1\") {\n\t\t\treturn (\n\t\t\t\t<div style={this.format}>\n\t\t\t\t\tCommand Board: <span style={{color: \"green\"}}>{this.state.connectionStatus}</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div style={this.format}>\n\t\t\t\t\tCommand Board: <span style={{color: \"red\"}}>{this.state.connectionStatus}</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}