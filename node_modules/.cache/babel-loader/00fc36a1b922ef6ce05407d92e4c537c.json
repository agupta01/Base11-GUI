{"ast":null,"code":"var _jsxFileName = \"/Users/arunavgupta/Documents/RPL/Base11-GUI/src/components/TCView.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst heartbeat = 1000;\n\nvar data = require(\"../data\");\n\nexport default class PTView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.useStyles = makeStyles({\n      table: {\n        minWidth: 650\n      }\n    });\n    this.divStyle = {\n      marginRight: \"15px\"\n    };\n\n    this.createData = function (sensor, readout) {\n      return {\n        sensor,\n        readout\n      };\n    };\n\n    this.state = {\n      t1: data.TC1,\n      t2: data.TC2,\n      t3: data.TC3,\n      t4: data.TC4,\n      t5: data.TC5,\n      t6: data.TC6,\n      t7: data.TC7,\n      t8: data.TC8\n    };\n    this.rows = [this.createData(\"TC1\", this.state.t1), this.createData(\"TC2\", this.state.t2), this.createData(\"TC3\", this.state.t3), this.createData(\"TC4\", this.state.t4), this.createData(\"TC5\", this.state.t5), this.createData(\"TC6\", this.state.t6), this.createData(\"TC7\", this.state.t7), this.createData(\"TC8\", this.state.t8)];\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), heartbeat);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return React.createElement(TableContainer, {\n      component: Paper,\n      style: this.divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Switch Status\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Readout\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.rows.map(row => React.createElement(TableRow, {\n      key: row.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, row.sensor), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, row.readout))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/arunavgupta/Documents/RPL/Base11-GUI/src/components/TCView.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","heartbeat","data","require","PTView","Component","constructor","props","useStyles","table","minWidth","divStyle","marginRight","createData","sensor","readout","state","t1","TC1","t2","TC2","t3","TC3","t4","TC4","t5","TC5","t6","TC6","t7","TC7","t8","TC8","rows","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","date","Date","render","map","row","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst heartbeat = 1000;\nvar data = require(\"../data\");\n\nexport default class PTView extends React.Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            t1: data.TC1,\n            t2: data.TC2,\n            t3: data.TC3,\n            t4: data.TC4,\n            t5: data.TC5,\n            t6: data.TC6,\n            t7: data.TC7,\n            t8: data.TC8\n\t\t}\n\n        this.rows = [\n          this.createData(\"TC1\", this.state.t1),\n          this.createData(\"TC2\", this.state.t2),\n          this.createData(\"TC3\", this.state.t3),\n          this.createData(\"TC4\", this.state.t4),\n          this.createData(\"TC5\", this.state.t5),\n          this.createData(\"TC6\", this.state.t6),\n          this.createData(\"TC7\", this.state.t7),\n          this.createData(\"TC8\", this.state.t8)\n        ];\n\t}\n\n    useStyles = makeStyles({\n      table: {\n        minWidth: 650,\n      },\n    });\n\n    divStyle = {\n        marginRight: \"15px\"\n    };\n\n    componentDidMount() {\n\t\tthis.timerID = setInterval(\n\t\t\t() => this.tick(),\n\t\t\theartbeat\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\n\ttick() {\n\t\tthis.setState({\n\t\t\tdate: new Date()\n\t\t});\n\t}\n\n    createData = function (sensor, readout) {\n      return { sensor, readout };\n    }\n\n    render () {\n        return (\n          <TableContainer component={Paper} style={this.divStyle}>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"left\">Name</TableCell>\n                  <TableCell align=\"right\">Switch Status</TableCell>\n                  <TableCell align=\"right\">Readout</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.rows.map(row => (\n                  <TableRow key={row.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.sensor}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.readout}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}