{"ast":null,"code":"var _jsxFileName = \"/Users/arunavgupta/Documents/RPL/Base11-GUI/src/components/Orientation.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nconst heartbeat = 1000;\n\nvar data = require(\"../data\");\n\nexport default class Orientation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.cardStyle = {\n      card: {\n        minWidth: 275\n      },\n      title: {\n        fontSize: 14\n      },\n      pos: {\n        marginBottom: 12\n      }\n    };\n\n    this.getRotation = function (xTilt, yTilt) {\n      return (xTilt ** 2 + yTilt ** 2) ** 0.5;\n    };\n\n    this.state = {\n      xTilt: data.xTilt,\n      yTilt: data.yTilt\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), heartbeat);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    if (this.getRotation(this.state.xTilt, this.state.yTilt) > 30) {\n      return React.createElement(Card, {\n        style: {\n          backgroundColor: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Current Orientation\"), React.createElement(Container, {\n        style: {\n          padding: \"100px 104px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require(\"../imgs/rocket.png\"),\n        height: \"256px\",\n        width: \"256px\",\n        style: {\n          transform: \"rotate(\".concat(this.getRotation(this.state.xTilt, this.state.yTilt), \"deg)\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), this.getRotation(this.state.xTilt, this.state.yTilt), \" degrees\");\n    } else {\n      return React.createElement(Card, {\n        style: this.cardStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Current Orientation\"), React.createElement(Container, {\n        style: {\n          padding: \"50px 104px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require(\"../imgs/rocket.png\"),\n        height: \"256px\",\n        width: \"256px\",\n        style: {\n          transform: \"rotate(\".concat(this.getRotation(this.state.xTilt, this.state.yTilt), \"deg)\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), this.getRotation(this.state.xTilt, this.state.yTilt), \" degrees\");\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/arunavgupta/Documents/RPL/Base11-GUI/src/components/Orientation.js"],"names":["React","makeStyles","Card","CardActions","CardContent","Button","Typography","Container","heartbeat","data","require","Orientation","Component","constructor","props","cardStyle","card","minWidth","title","fontSize","pos","marginBottom","getRotation","xTilt","yTilt","state","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","date","Date","render","backgroundColor","padding","transform"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst heartbeat = 1000;\nvar data = require(\"../data\");\n\nexport default class Orientation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            xTilt: data.xTilt,\n            yTilt: data.yTilt\n        }\n    }\n    cardStyle = {\n        card: {\n            minWidth: 275,\n        },\n        title: {\n            fontSize: 14,\n        },\n        pos: {\n            marginBottom: 12,\n        },\n    };\n\n    componentDidMount() {\n\t\tthis.timerID = setInterval(\n\t\t\t() => this.tick(),\n\t\t\theartbeat\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\n\ttick() {\n\t\tthis.setState({\n\t\t\tdate: new Date()\n\t\t});\n\t}\n\n    getRotation = function (xTilt, yTilt) {\n        return ((xTilt**2 + yTilt**2)**0.5)\n    }\n\n    render () {\n        if (this.getRotation(this.state.xTilt, this.state.yTilt) > 30) {\n            return (\n                <Card style={{backgroundColor: 'red'}}>\n                    <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                        Current Orientation\n                    </Typography>\n                    <Container style={{padding: \"100px 104px\"}}>\n                        <img src={require(\"../imgs/rocket.png\")} height=\"256px\" width=\"256px\" style={{transform: `rotate(${this.getRotation(this.state.xTilt, this.state.yTilt)}deg)`}}></img>\n                    </Container>\n                    {this.getRotation(this.state.xTilt, this.state.yTilt)} degrees\n                </Card>\n            );\n        } else {\n            return (\n                <Card style={this.cardStyle}>\n                    <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                        Current Orientation\n                    </Typography>\n                    <Container style={{padding: \"50px 104px\"}}>\n                        <img src={require(\"../imgs/rocket.png\")} height=\"256px\" width=\"256px\" style={{transform: `rotate(${this.getRotation(this.state.xTilt, this.state.yTilt)}deg)`}}></img>\n                    </Container>\n                    {this.getRotation(this.state.xTilt, this.state.yTilt)} degrees\n                </Card>\n            );\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}